<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/taylanaydin/Desktop/Chimera/data/chimera.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2237"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,14:maindata_snapshots"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">-- Güvenlik: Yabancı anahtarları aktif et
PRAGMA foreign_keys = ON;

-- 1) Her pipeline çalıştırması için özet kayıt
CREATE TABLE IF NOT EXISTS runs (
  id              INTEGER PRIMARY KEY AUTOINCREMENT,
  timestamp       DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  ticker          TEXT     NOT NULL,
  lookback_years  REAL,
  confidence      TEXT,                 -- high | medium | low
  regime          TEXT,                 -- bull_high_vol vs.
  risk_note       TEXT                  -- risk agent'tan kısa not
);

CREATE INDEX IF NOT EXISTS idx_runs_ticker_time
  ON runs(ticker, timestamp);

-- 2) İşlenmiş veri anlık görüntüsü (OHLCV + temel indikatörler)
CREATE TABLE IF NOT EXISTS data_snapshots (
  id        INTEGER PRIMARY KEY AUTOINCREMENT,
  run_id    INTEGER NOT NULL,
  date      DATE    NOT NULL,
  open      REAL,
  high      REAL,
  low       REAL,
  close     REAL,
  volume    REAL,
  -- Sık kullandıklarımızı alan olarak tutuyoruz (gerekirse genişletiriz)
  sma14     REAL,
  sma50     REAL,
  ema12     REAL,
  ema26     REAL,
  rsi14     REAL,
  macd_line REAL,
  bb_upper  REAL,
  bb_middle REAL,
  bb_lower  REAL,
  FOREIGN KEY (run_id) REFERENCES runs(id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_snapshots_run_date
  ON data_snapshots(run_id, date);

CREATE INDEX IF NOT EXISTS idx_snapshots_date
  ON data_snapshots(date);

-- 3) Tahminler (ARIMA / ARIMAX / ETS)
CREATE TABLE IF NOT EXISTS forecasts (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  run_id        INTEGER NOT NULL,
  model         TEXT    NOT NULL,  -- ARIMA | ARIMAX | ETS
  order_text    TEXT,              -- &quot;(1,1,2)&quot; gibi; ETS için cfg json
  horizon       INTEGER NOT NULL,  -- gün
  date          DATE    NOT NULL,  -- tahmin edilen gün
  forecast_price REAL   NOT NULL,
  aic           REAL,
  rmse          REAL,
  FOREIGN KEY (run_id) REFERENCES runs(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_forecasts_run_model_date
  ON forecasts(run_id, model, date);

-- 4) Risk planı (pozisyon büyüklüğü, SL/TP)
CREATE TABLE IF NOT EXISTS risk_plans (
  id          INTEGER PRIMARY KEY AUTOINCREMENT,
  run_id      INTEGER NOT NULL,
  direction   TEXT,                -- long | short
  price       REAL,                -- karar anındaki fiyat
  units       REAL,                -- alınacak/satılacak adet
  notional    REAL,                -- USD karşılığı
  risk_pct    REAL,                -- hesap özsermayesine göre
  stop_price  REAL,
  take_profit REAL,
  atr         REAL,
  atr_window  INTEGER,
  note        TEXT,
  FOREIGN KEY (run_id) REFERENCES runs(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_risk_run
  ON risk_plans(run_id);

-- 5) Data Quality raporları (özet bayraklar + metin uyarılar)
CREATE TABLE IF NOT EXISTS quality_reports (
  id         INTEGER PRIMARY KEY AUTOINCREMENT,
  run_id     INTEGER NOT NULL,
  is_ok      INTEGER NOT NULL,     -- 0/1
  severity   TEXT,                 -- info | warn | error
  cols_ok    INTEGER,              -- 0/1
  index_ok   INTEGER,
  na_ok      INTEGER,
  vol_ok     INTEGER,
  outlier_ok INTEGER,
  candle_ok  INTEGER,
  gap_ok     INTEGER,
  warnings   TEXT,                 -- satır içi JSON/text
  meta_json  TEXT,                 -- dilersek full meta JSON
  FOREIGN KEY (run_id) REFERENCES runs(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_quality_run
  ON quality_reports(run_id);

-- (Opsiyonel) Son çalıştırmayı hızlı çekmek için basit bir VIEW
CREATE VIEW IF NOT EXISTS v_last_run AS
SELECT *
FROM runs
ORDER BY timestamp DESC, id DESC
LIMIT 1;</sql><current_tab id="0"/></tab_sql></sqlb_project>
